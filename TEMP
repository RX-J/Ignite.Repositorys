using System;
using System.Runtime.InteropServices;

class Program
{
    // Windows API Methoden zum Registrieren/Deregistrieren von Hotkeys
    [DllImport("user32.dll")]
    private static extern bool RegisterHotKey(IntPtr hWnd, int id, uint fsModifiers, uint vk);

    [DllImport("user32.dll")]
    private static extern bool UnregisterHotKey(IntPtr hWnd, int id);

    [DllImport("user32.dll")]
    private static extern IntPtr GetMessage(out MSG lpMsg, IntPtr hWnd, uint wMsgFilterMin, uint wMsgFilterMax);

    [DllImport("user32.dll")]
    private static extern bool TranslateMessage(ref MSG lpMsg);

    [DllImport("user32.dll")]
    private static extern IntPtr DispatchMessage(ref MSG lpMsg);

    // Strukturdarstellung einer Windows-Nachricht
    [StructLayout(LayoutKind.Sequential)]
    private struct MSG
    {
        public IntPtr hwnd;
        public uint message;
        public IntPtr wParam;
        public IntPtr lParam;
        public uint time;
        public POINT pt;
    }

    [StructLayout(LayoutKind.Sequential)]
    public struct POINT
    {
        public int x;
        public int y;
    }

    // Konstanten für Modifier-Keys
    private const uint MOD_ALT = 0x0001;
    private const uint MOD_CONTROL = 0x0002;
    private const uint MOD_SHIFT = 0x0004;
    private const uint MOD_WIN = 0x0008;

    private const int WM_HOTKEY = 0x0312;

    static void Main(string[] args)
    {
        // Hotkey-IDs (beliebige eindeutige IDs)
        const int HOTKEY_ID = 1;

        // Beispiel-Tasten für die Hotkey-Kombination: Ctrl + Shift + A
        uint modifier = MOD_CONTROL | MOD_SHIFT;
        uint key = (uint)ConsoleKey.A; // Die Taste A hat den virtuellen Keycode 0x41

        // Hotkey registrieren
        if (!RegisterHotKey(IntPtr.Zero, HOTKEY_ID, modifier, key))
        {
            Console.WriteLine("Fehler beim Registrieren des Hotkeys.");
            return;
        }
        Console.WriteLine("Hotkey Ctrl+Shift+A registriert. Drücken Sie die Kombination, um die Aktion auszuführen.");

        // Nachrichtenloop, um Hotkey-Ereignisse zu verarbeiten
        MSG msg;
        while (true)
        {
            // Auf eine Nachricht warten
            GetMessage(out msg, IntPtr.Zero, 0, 0);

if (msg.wParam.ToInt32() == HOTKEY_ID)
                {
                    // Die Hotkey-Aktion wird hier ausgeführt
                    Console.WriteLine("Hotkey Ctrl+Shift+A wurde gedrückt!");
                    PerformAction();
                }
            }

            TranslateMessage(ref msg);
            DispatchMessage(ref msg);
        }

        // Am Ende des Programms den Hotkey deregistrieren
        UnregisterHotKey(IntPtr.Zero, HOTKEY_ID);
    }

    // Beispielaktion, die bei Hotkey-Druck ausgeführt wird
    static void PerformAction()
    {
        Console.WriteLine("Aktion wurde ausgeführt!");
    }
}